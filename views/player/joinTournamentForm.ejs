<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Join <%= tournament.name %></title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Google Fonts for Gaming Vibe -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?&family=Oxanium:wght@400;600;700&display=swap" rel="stylesheet">
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />

  <style>
    :root {
      --primary-glow: #9f5dff;
      --secondary-glow: #00e5ff;
      --dark-bg: #111119;
      --card-bg: #1c1c27;
      --border-color: rgba(255, 255, 255, 0.1);
    }

    body {
      font-family: 'Oxanium', sans-serif;
      background-color: var(--dark-bg);
      color: #f0f0f0;
      background-image:
        radial-gradient(at 0% 0%, hsla(253, 48%, 29%, 0.3) 0px, transparent 50%),
        radial-gradient(at 98% 97%, hsla(183, 100%, 35%, 0.3) 0px, transparent 50%);
    }
    
    .join-card {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0,0,0,0.5);
    }

    .card-header-custom {
        text-align: center;
        padding: 2rem 1.5rem;
        background: linear-gradient(145deg, rgba(40, 40, 58, 0.5), rgba(30, 30, 45, 0.5));
        border-bottom: 1px solid var(--border-color);
    }

    .card-header-custom h3 {
        font-weight: 700;
        color: #fff;
        margin: 0;
    }
    
    .card-header-custom .fee-display {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--secondary-glow);
        margin-top: 0.5rem;
    }

    .form-control, .form-control:focus {
        background-color: #2a2a3a;
        border: 1px solid var(--border-color);
        color: #fff;
        padding: 0.75rem 1rem;
    }

    .form-control:focus {
        border-color: var(--primary-glow);
        box-shadow: 0 0 0 0.25rem rgba(159, 93, 255, 0.25);
    }
    
    .form-control::placeholder {
        color: #6c757d;
    }
    
    .input-group-text {
        background-color: #343a40;
        border: 1px solid var(--border-color);
        color: var(--primary-glow);
    }

    .form-label {
        font-weight: 600;
        color: #aab;
    }

    .btn-glow-primary {
      position: relative;
      color: #fff;
      background-color: var(--primary-glow);
      padding: 12px 30px;
      font-weight: 700;
      letter-spacing: 1px;
      text-transform: uppercase;
      border: none;
      border-radius: 8px;
      transition: all 0.3s ease;
      box-shadow: 0 0 10px var(--primary-glow), 0 0 20px var(--primary-glow);
    }

    .btn-glow-primary:hover:not(:disabled) {
      background-color: #b37eff;
      box-shadow: 0 0 15px #b37eff, 0 0 30px #b37eff;
    }
    
    .btn-glow-primary:disabled {
      background-color: #5b3e8d;
      box-shadow: none;
      cursor: not-allowed;
    }
  </style>
</head>

<body>
  <%- include("../includes/navbar") %>

    <div class="container py-5">
      <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">

          <div class="join-card">
            <div class="card-header-custom">
              <h3>Join <%= tournament.name %></h3>
              <div class="fee-display">Entry Fee: ₹<%= tournament.entryFee %></div>
            </div>
            
            <div class="card-body p-4 p-md-5">
              <!-- Using a form tag is better practice -->
              <form id="joinForm" novalidate>
                
                <!-- Team Name (Required) -->
                <div class="mb-3">
                  <label for="teamName" class="form-label">Team Name*</label>
                  <div class="input-group">
                    <span class="input-group-text"><i class="fa-solid fa-trophy fa-fw"></i></span>
                    <input type="text" id="teamName" name="teamName" class="form-control" placeholder="Enter your official team name" required>
                  </div>
                  <div class="invalid-feedback" id="teamNameError" style="display: none;">
                    Team name is required to join.
                  </div>
                </div>

                <!-- Team Leader (You) -->
                <div class="mb-4">
                  <label class="form-label">Team Leader (You)</label>
                  <div class="input-group">
                    <span class="input-group-text"><i class="fa-solid fa-user-crown fa-fw"></i></span>
                    <input type="text" class="form-control" value="<%= user.username %>" disabled readonly>
                  </div>
                </div>

                <hr class="my-4">

                <!-- Team Members (Optional) -->
                <% for (let i=2; i <=4; i++) { %>
                  <div class="mb-3">
                    <label for="member<%= i %>" class="form-label">Member <%= i %> Username</label>
                    <div class="input-group">
                      <span class="input-group-text"><i class="fa-solid fa-user-plus fa-fw"></i></span>
                      <input type="text" id="member<%= i %>" name="member<%= i %>" class="form-control" placeholder="Optional">
                    </div>
                  </div>
                <% } %>

                <!-- Buttons -->
                <div class="d-grid gap-3 mt-4">
                  <button type="submit" class="btn btn-glow-primary" id="payBtn">
                    <i class="fa-solid fa-credit-card me-2"></i>Pay ₹<%= tournament.entryFee %> & Join
                  </button>
                  <a href="/tournaments" class="btn btn-outline-secondary">Cancel</a>
                </div>

              </form>
            </div>
          </div>

        </div>
      </div>
    </div>
    <%- include("../includes/footer") %>

    <!-- Integration of Payments (with improved validation) -->
    <% if (user && user.role==='player' && !alreadyJoined && tournament.entryFee> 0) { %>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
      const joinForm = document.getElementById("joinForm");
      const payBtn = document.getElementById("payBtn");
      const teamNameInput = document.getElementById("teamName");
      const teamNameError = document.getElementById("teamNameError");

      joinForm.addEventListener("submit", async (event) => {
        event.preventDefault(); // Stop form from submitting the traditional way

        // ✅ UX IMPROVEMENT: Validate team name before proceeding
        if (!teamNameInput.value.trim()) {
          teamNameError.style.display = 'block';
          teamNameInput.focus();
          return; // Stop execution
        } else {
          teamNameError.style.display = 'none';
        }
        
        // ✅ UX IMPROVEMENT: Provide feedback to the user
        payBtn.disabled = true;
        payBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';

        try {
          const amount = <%= JSON.stringify(tournament.entryFee * 100) %>;
          const tournamentId = "<%= tournament._id %>";

          const response = await fetch("/payment/order", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ amount, tournamentId })
          });

          const order = await response.json();
          if (order.error) throw new Error(order.error);

          const options = {
            key: "<%= razorpayKey %>",
            amount: order.amount,
            currency: order.currency,
            name: "<%= tournament.name %>",
            description: "Tournament Entry Fee for: " + teamNameInput.value,
            order_id: order.id,
            handler: async function (response) {
              const teamName = document.querySelector('input[name="teamName"]').value;
              const member2 = document.querySelector('input[name="member2"]').value;
              const member3 = document.querySelector('input[name="member3"]').value;
              const member4 = document.querySelector('input[name="member4"]').value;

              const verifyResponse = await fetch("/payment/verify", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                  razorpay_payment_id: response.razorpay_payment_id,
                  razorpay_order_id: response.razorpay_order_id,
                  razorpay_signature: response.razorpay_signature,
                  tournamentId: tournamentId,
                  teamName,
                  member2,
                  member3,
                  member4
                })
              });

              const result = await verifyResponse.json();
              if (result.success) {
                window.location.href = "/player/my-tournaments";
              } else {
                alert("❌ Payment verification failed. Please contact support.");
                // Re-enable the button on failure
                payBtn.disabled = false;
                payBtn.innerHTML = '<i class="fa-solid fa-credit-card me-2"></i>Pay ₹<%= tournament.entryFee %> & Join';
              }
            },
            prefill: {
              name: "<%= user.username %>",
              email: "<%= user.email %>"
            },
            theme: { color: "#9f5dff" },
            modal: {
                ondismiss: function() {
                    // Re-enable the button if user closes the Razorpay modal
                    payBtn.disabled = false;
                    payBtn.innerHTML = '<i class="fa-solid fa-credit-card me-2"></i>Pay ₹<%= tournament.entryFee %> & Join';
                }
            }
          };

          const rzp = new Razorpay(options);
          rzp.on('payment.failed', function(response) {
              alert(`Payment Failed: ${response.error.description}`);
              payBtn.disabled = false;
              payBtn.innerHTML = '<i class="fa-solid fa-credit-card me-2"></i>Pay ₹<%= tournament.entryFee %> & Join';
          });
          rzp.open();

        } catch (err) {
          console.error("❌ Payment error:", err);
          alert("Something went wrong while starting payment.");
          // Re-enable the button on error
          payBtn.disabled = false;
          payBtn.innerHTML = '<i class="fa-solid fa-credit-card me-2"></i>Pay ₹<%= tournament.entryFee %> & Join';
        }
      });
    </script>
    <% } %>
</body>
</html>